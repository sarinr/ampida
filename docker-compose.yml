name: ampida
services:
  postgres:
    container_name: postgres
    image: postgres:15-alpine
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - ampida
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}

  hasura:
    container_name: hasura
    image: hasura/graphql-engine:v2.21.0
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      - "postgres"
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - ampida
    environment:
      HASURA_GRAPHQL_JWT_SECRET: ${JWT_SECRET}
      HASURA_GRAPHQL_ADMIN_SECRET: ${ADMIN_SECRET}
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: ${ADMIN_SECRET}
      HASURA_GRAPHQL_DATABASE_URL: postgres://${DB_USER}:${DB_PASSWORD}@postgres:5432/${DB_NAME}

  dashboard:
    container_name: dashboard
    build:
      context: .
      dockerfile: ./apps/dashboard/Dockerfile
    restart: unless-stopped
    ports:
      - 3000:3000
    networks:
      - ampida
  environment:
    PORT: 3000

  backend:
    container_name: backend
    build:
      context: .
      dockerfile: ./apps/backend/Dockerfile
    restart: unless-stopped
    ports:
      - 3001:3001
    networks:
      - ampida
    environment:
      PORT: 3001
      DATABASE_URL: postgres://${DB_USER}:${DB_PASSWORD}@postgres:5432/${DB_NAME}

volumes:
  postgres:

networks:
  ampida:
    external: true
